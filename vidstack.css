vds-media {
  border-radius: 10px;
}
.sixteen_by_nine {
  width: 100%;
  aspect-ratio: 16/9;
}
.media-controls {
  display: grid;
  aspect-ratio: 16/9;
  grid-template-rows: [header] auto [body] 1fr [footer] auto;
  grid-template-columns: 1fr;
  position: absolute;
  top: 0;
  width: 100%;
}
.controls_header {
  display: flex;
  padding: 1em;
  color: rgba(255,255,255,1);
}
.controls_body {
}
.controls_footer {
}
.controls_row1 {}
.controls_row2 {
  display: flex;
  position: relative;
}
.group_a {
  display: flex;
  align-items: center;
  width: 100%;
  gap: .5em;
  position: relative;
}
.group_b {
  display: flex;
  margin-left: auto;
  align-items: center;
  position: relative;
  margin-right: 1em;
}
.group_b .fa-solid, 
.group_a .fa-solid {
  padding: .5em;
}
.media-times {
  display: flex;
  align-content: center;
}

.media-play-icon, .media-pause-icon {
  font-size: 1.7em;
  padding-left: .5em;
  min-width: 2em;
}
vds-media[paused] .media-pause-icon {
  display: none;
}
/* Hide pause text when media _is_ paused. */
vds-media[paused] .media-pause {
  display: none;
}
/* Hide play text when media _is not_ paused. */
vds-media:not([paused]) .media-play {
  display: none;
}

vds-media:not([paused]) .media-play-icon {
  display: none;
}
/*****/


/****** Mute *****/
/* Hide mute text when media _is_ muted. */
vds-media[muted] .media-mute {
  display: none;
}
/* Hide unmute text when media _is not_ muted. */
vds-media:not([muted]) .media-unmute {
  display: none;
}
/****/


.media-buffering-container {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  /* prevent blocking lower elements (e.g., gestures). */
  pointer-events: none;
  /** place above poster (optional). */
  z-index: 1;
}

.media-buffering-icon {
  width: 96px;
  height: 96px;
  color: white;
  opacity: 0;
  transition: opacity 200ms ease;
}

.media-buffering-track {
  opacity: 0.25;
}

.media-buffering-track-fill {
  opacity: 0.75;
  stroke-dasharray: 100;
  stroke-dashoffset: 50;
}

/* Show buffering indicator while media is not ready, or buffering. */
vds-media:not([can-play]) .media-buffering-icon,
vds-media[waiting] .media-buffering-icon {
  opacity: 1;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}


/**
 * -----------------------------------------------------------
 * Time Slider
 * -----------------------------------------------------------
 */

vds-time-slider {
  --height: 28px;
  --thumb-width: 14px;
  --track-height: 7px;
  --track-color: #6366f1;

  display: flex;
  align-items: center;
  position: relative;
  width: 100%;
  height: var(--height);
  /** Prevent thumb flowing out of slider. */
  margin: 0 calc(var(--thumb-width) / 2);
  cursor: pointer;
}

.slider-track {
  background-color: var(--track-color);
  width: 100%;
  height: var(--track-height);
  position: absolute;
  top: 50%;
  left: 0;
  z-index: 0;
  transform: translateY(-50%);
}

.slider-track.fill {
  background-color: #a5b4fc;
  transform-origin: left center;
  transform: translateY(-50%) scaleX(var(--vds-fill-rate));
  will-change: transform;
  z-index: 1; /** above track. */
}

.slider-thumb-container {
  position: absolute;
  top: 0;
  left: var(--vds-fill-percent);
  width: var(--thumb-width);
  height: 100%;
  transform: translateX(-50%); /** re-center along x-axis. */
  z-index: 2; /** above track fill. */
  will-change: left;
}

vds-time-slider[dragging] .slider-thumb-container {
  left: var(--vds-pointer-percent);
}

.slider-thumb {
  position: absolute;
  top: 50%;
  left: 0;
  width: var(--thumb-width);
  height: var(--thumb-width);
  border-radius: 9999px;
  background-color: #fff;
  transform: translateY(-50%);
}

/**
 * -----------------------------------------------------------
 * Media Preview Container
 * -----------------------------------------------------------
 */

.media-preview-container {
  --width: 156px;
  --width-half: calc(var(--width) / 2);
  --top: calc(-1 * var(--width-half) - 40px);
  --opacity-duration: 200ms;

  /* clamp video to left and right of slider. */
  --left-clamp: max(var(--width-half), var(--vds-pointer-percent));
  --right-clamp: calc(100% - var(--width-half));
  --left: min(var(--left-clamp), var(--right-clamp));

  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  top: var(--top);
  left: var(--left);
  width: var(--width);
  opacity: 0;
  pointer-events: none;
  transition: opacity ease-out var(--opacity-duration);
  /* re-position to center. */
  transform: translateX(-50%);
  will-change: left;
  border-radius: 2px;
}

/* show preview while device pointer is inside slider. */
vds-time-slider[pointing] .media-preview-container {
  opacity: 1;
  transition: opacity ease-in var(--opacity-duration);
}

/**
 * -----------------------------------------------------------
 * Slider Video
 * -----------------------------------------------------------
 */

vds-slider-video {
  background-color: #000;
}

/* Temporarily hide video while loading. */
vds-slider-video:not([video-can-play]) {
  opacity: 0 !important;
}

/* Hide video if it fails to load. */
vds-slider-video[video-error] {
  display: none;
}

/**
 * -----------------------------------------------------------
 * Slider Preview Time
 * -----------------------------------------------------------
 */

vds-slider-value-text {
  margin-top: 8px;
  font-size: 12px;
  padding: 0 8px;
  color: hsl(0, 0%, 70%);
  background-color: black;
}






vds-mute-button {
  position: relative;
  width: 24px;
  height: 24px;
  border-radius: 4px;
  cursor: pointer;
  color: white;
}

vds-mute-button > svg {
  /** `absolute` so icons are placed on top of each other. */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 1;
  transition: opacity ease 150ms;
}

vds-media:not([muted]) .media-mute-icon {
  opacity: 0;
}

vds-media[muted] .media-unmute-icon {
  opacity: 0;
}

/**
 * -----------------------------------------------------------
 * Volume Slider
 * -----------------------------------------------------------
 */

vds-volume-slider {
  --height: 38px;
  --thumb-width: 14px;
  --track-height: 4px;

  display: flex;
  align-items: center;
  width: 100%;
  max-width: 150px;
  height: var(--height);
  /** Prevent thumb flowing out of slider. */
  margin: 0 calc(var(--thumb-width) / 2);
  cursor: pointer;
}

.slider-track {
  background-color: #6366f1;
  width: 100%;
  height: var(--track-height);
  position: absolute;
  top: 50%;
  left: 0;
  z-index: 0;
  transform: translateY(-50%);
}

.slider-track.fill {
  background-color: #a5b4fc;
  transform-origin: left center;
  transform: translateY(-50%) scaleX(var(--vds-fill-rate));
  will-change: transform;
  z-index: 1; /** above track. */
}

.slider-thumb-container {
  position: absolute;
  top: 0;
  left: var(--vds-fill-percent);
  width: var(--thumb-width);
  height: 100%;
  transform: translateX(-50%); /** re-center along x-axis. */
  z-index: 2; /** above track fill. */
  will-change: left;
}

vds-volume-slider[dragging] .slider-thumb-container {
  left: var(--vds-pointer-percent);
}

.slider-thumb {
  position: absolute;
  top: 50%;
  left: 0;
  width: var(--thumb-width);
  height: var(--thumb-width);
  border-radius: 9999px;
  background-color: #fff;
  transform: translateY(-50%);
}

/* Avoid double controls on iOS when in fullscreen. */
vds-media[hide-ui] .media-controls,
/* Hide controls while media is loading, or user is idle. */
vds-media:not([can-play]) .media-controls,
vds-media[user-idle] .media-controls {
  opacity: 0;
  visibility: hidden;
}

/* Show controls if autoplay fails. */
vds-media[autoplay-error] .media-controls {
  opacity: 1;
}